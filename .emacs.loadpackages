;; Packages to install first (check if emacs is 24 or higher)
(if (>= emacs-major-version 24) 
    (progn
	;; Add a larger package list
	(setq package-archives '(("ELPA" . "http://tromey.com/elpa/") 
                          ("gnu" . "http://elpa.gnu.org/packages/")
                          ("marmalade" . "http://marmalade-repo.org/packages/")
                          ("melpa" . "http://melpa.milkbox.net/packages/"))) 
       (package-refresh-contents) 
       ;; Install flymake mode if it doesn't exist, then configure it
       (when (not (require 'flymake nil t)) (package-install 'flymake))  
       (global-set-key (kbd "C-; C-f") 'flymake-mode)  
       ;; flymake-cursor
       (when (not (require 'flymake-cursor nil t)) (package-install 'flymake-cursor)) 
       ;; Install rainbow mode if it doesn't exist, then configure it
       (when (not (require 'rainbow-mode nil t)) (package-install 'rainbow-mode))
       (defun all-css-modes() (css-mode) (rainbow-mode)) 
       (add-to-list 'auto-mode-alist '("\\.css$" . all-css-modes)) 
       ;; highlight-indentation
       (when (not (require 'highlight-indentation nil t)) (package-install 'highlight-indentation))
       (require 'highlight-indentation)
       (add-hook 'python-mode-hook 'highlight-indentation-mode)
       ;; yaml-mode
       (when (not (require 'yaml-mode nil t)) (package-install 'highlight-indentation))
       (require 'yaml-mode)
       (add-to-list 'auto-mode-alist '("\\.yaml$" . yaml-mode)) 
       ;; autocomplete
       (when (not (require 'auto-complete nil t)) (package-install 'auto-complete))
       (add-to-list 'ac-dictionary-directories "~/.emacs.d/ac-dict")
       (require 'auto-complete-config)
       (ac-config-default)
       (defun ac-ropemacs-initialize ()
          (autoload 'pymacs-apply "pymacs")
          (autoload 'pymacs-call "pymacs")
          (autoload 'pymacs-eval "pymacs" nil t)
          (autoload 'pymacs-exec "pymacs" nil t)
          (autoload 'pymacs-load "pymacs" nil t)
          (pymacs-load "ropemacs" "rope-")
       t)
       (ac-ropemacs-initialize)

       (defun ac-ropemacs-candidates ()
         (mapcar (lambda (completion)
            (concat ac-prefix completion))
          (rope-completions)))

       (ac-define-source nropemacs
         '((candidates . ac-ropemacs-candidates)
           (symbol     . "p")))

       (ac-define-source nropemacs-dot
         '((candidates . ac-ropemacs-candidates)
           (symbol     . "p")
           (prefix     . c-dot)
           (requires   . 0)))

       (defun ac-nropemacs-setup ()
          (setq ac-sources (append '(ac-source-nropemacs
                                     ac-source-nropemacs-dot) ac-sources)))

       (add-hook 'python-mode-hook 'ac-nropemacs-setup)
       ;; yasnippet
       (when (not (require 'yasnippet nil t)) (package-install 'yasnippet))
       (require 'yasnippet)
       (yas/initialize)
       (yas/global-mode 1) 
       (yas/load-directory "~/.emacs.d/snippets")
       (setq ac-sources '(ac-source-semantic ac-source-yasnippet))
       ;; Scala-Mode
       (add-to-list
           'auto-mode-alist
           '("\\.scala$" . scala-mode))
    )
)
